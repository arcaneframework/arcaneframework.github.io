name: Documentation generator

on:
  schedule:
    - cron: '23 1 * * 1' # Tous les lundis Ã  01:23 (du matin).
  # A executer lorsque l'on demande.
  workflow_dispatch:
  

env:

  SOURCE_DIR: '/__w/arcaneframework.github.io/arcaneframework.github.io/framework'
  BUILD_DIR: '/__w/arcaneframework.github.io/arcaneframework.github.io/build'

  DOC_DIR: '/__w/arcaneframework.github.io/arcaneframework.github.io/doc'

  # ccache
  CC_KEY_PREFIX: 'doc_gcc-11'
  CCACHE_COMPRESS: true
  CCACHE_COMPRESSLEVEL: 6
  CCACHE_DIR: '/__w/arcane_doc/arcane_doc/ccache'
  CCACHE_MAXSIZE: 5G

  # CMake
  CM_BUILD_TYPE: Release
  CM_CCACHE_OPTS: "-DCMAKE_CXX_COMPILER_LAUNCHER=ccache"
  CM_COMPILER: '-DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++'

jobs:
  arcane_build:
    name: Build Arcane and documentations
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/arcaneframework/ubuntu-2204:gcc-12_clang-14_doc_20220617

    steps:
      - name: Checkout doc
        uses: actions/checkout@v3
        with:
          path: ${{ env.DOC_DIR }}

      - name: Checkout framework
        uses: actions/checkout@v3
        with:
          repository: arcaneframework/framework
          path: ${{ env.SOURCE_DIR }}
          submodules: true

      - name: Get date
        id: get-date
        shell: bash
        run: echo "::set-output name=date::$(/bin/date -u '+%Y%m%d%H%M%S')"

      - name: Get cache for ccache tool
        uses: actions/cache@v2
        with:
          path: ${{env.CCACHE_DIR}}
          key: ${{ env.CC_KEY_PREFIX }}-arcane-${{ env.CM_BUILD_TYPE }}-${{ steps.get-date.outputs.date }}-${{ github.run_number }}
          restore-keys: ${{ env.CC_KEY_PREFIX }}-arcane-${{ env.CM_BUILD_TYPE }}-

      - name: Configure
        shell: bash
        run: |
          cmake \
          -S ${{ env.SOURCE_DIR }} \
          -B ${{ env.BUILD_DIR }} \
          -GNinja \
          -DCMAKE_BUILD_TYPE=${{ env.CM_BUILD_TYPE }} \
          ${{ env.CM_CCACHE_OPTS }} \
          ${{ env.CM_COMPILER }}

      - name: Build
        shell: bash
        run: |
          cmake --build ${{ env.BUILD_DIR }}

      - name: Build userdoc
        shell: bash
        run: |
          cmake --build ${{ env.BUILD_DIR }} --target userdoc

      - name: Build devdoc
        shell: bash
        run: |
          cmake --build ${{ env.BUILD_DIR }} --target devdoc

      - name: Move userdoc and devdoc
        shell: bash
        run: |
          rm -rf ${{ env.DOC_DIR }}/arcane
          mkdir -p ${{ env.DOC_DIR }}/arcane
          mv ${{ env.BUILD_DIR }}/share/userdoc ${{ env.DOC_DIR }}/arcane
          mv ${{ env.BUILD_DIR }}/share/devdoc ${{ env.DOC_DIR }}/arcane

      - name: Deploy Docs
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: main
          publish_dir: ${{ env.DOC_DIR }}
          force_orphan: false
          exclude_assets: ''
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'